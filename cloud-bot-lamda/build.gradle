apply plugin: 'java'
apply plugin: 'maven'

description = 'Lamda to handle request from the bot'


sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springVersion = '5.0.2.RELEASE'
        jacksonVersion = '2.9.3'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.3.RELEASE"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "io.spring.dependency-management"

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

// If requiring AWS JDK, uncomment the dependencyManagement to use the bill of materials
//   https://aws.amazon.com/blogs/developer/managing-dependencies-with-aws-sdk-for-java-bill-of-materials-module-bom/
dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.255'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile("org.jetbrains.kotlin:kotlin-reflect")

    compile "com.amazonaws:aws-lambda-java-core:1.1.0"
    compile "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    compile "com.amazonaws:aws-lambda-java-events:2.0.1"
    compile "com.amazonaws:aws-java-sdk-ec2"

    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"


    compile "org.springframework:spring-context:${springVersion}"
    compile "io.github.microutils:kotlin-logging:1.4.9"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:2.8.2"
//    compile 'com.google.cloud:google-cloud-dialogflow:0.32.0-alpha'
    compile 'com.google.apis:google-api-services-compute:v1-rev165-1.23.0'

    testCompile "org.springframework.boot:spring-boot-starter-test:1.5.9.RELEASE"
    testCompile "commons-io:commons-io:2.6"

}

task buildZip(type: Zip) {
    from compileKotlin
    from processResources
    from System.getenv('CLOUD_BOT_GOOLD_ACCOUNT_SERVICE_FILE')
    into('lib') {
        from configurations.runtime
    }
}

task deploy(type: Exec, dependsOn: 'buildZip') {
    commandLine 'serverless', 'deploy'
}
